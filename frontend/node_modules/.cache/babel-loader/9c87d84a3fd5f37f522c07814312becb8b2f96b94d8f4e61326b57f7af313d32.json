{"ast":null,"code":"/**\n * Контекст для Telegram WebApp\n * Предоставляет доступ к данным пользователя Telegram и функциям WebApp API\n */import React,{createContext,useContext,useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const TelegramContext=/*#__PURE__*/createContext(null);export const useTelegram=()=>{const context=useContext(TelegramContext);if(!context){throw new Error('useTelegram must be used within TelegramProvider');}return context;};export const TelegramProvider=_ref=>{let{children}=_ref;const[webApp,setWebApp]=useState(null);const[user,setUser]=useState(null);const[isReady,setIsReady]=useState(false);useEffect(()=>{var _window$Telegram;// Инициализация Telegram WebApp\nif(typeof window!=='undefined'&&(_window$Telegram=window.Telegram)!==null&&_window$Telegram!==void 0&&_window$Telegram.WebApp){var _tg$initDataUnsafe;const tg=window.Telegram.WebApp;// Расширяем WebApp на весь экран\ntg.expand();// Включаем закрытие по свайпу вниз (если поддерживается)\nif(tg.enableClosingConfirmation){tg.enableClosingConfirmation();}// Устанавливаем тему (если поддерживается)\nif(tg.setHeaderColor){tg.setHeaderColor('#1a1a1a');}if(tg.setBackgroundColor){tg.setBackgroundColor('#1a1a1a');}// Получаем данные пользователя\nconst userData=(_tg$initDataUnsafe=tg.initDataUnsafe)===null||_tg$initDataUnsafe===void 0?void 0:_tg$initDataUnsafe.user;setWebApp(tg);// Если пользователь есть - используем его, иначе mock данные\nif(userData){setUser(userData);}else{// Mock данные для разработки вне Telegram\nconsole.warn('Telegram user not found. Using mock data for development.');setUser({id:123456789,first_name:'Test',last_name:'User',username:'testuser'});}setIsReady(true);console.log('Telegram WebApp initialized:',{platform:tg.platform,version:tg.version,user:userData||'mock'});}else{// Для разработки вне Telegram - используем mock данные\nconsole.warn('Telegram WebApp не доступен. Используются mock данные для разработки.');setUser({id:123456789,first_name:'Test',last_name:'User',username:'testuser'});setIsReady(true);}},[]);const showAlert=message=>{if(webApp){webApp.showAlert(message);}else{alert(message);}};const showConfirm=message=>{return new Promise(resolve=>{if(webApp){webApp.showConfirm(message,resolve);}else{resolve(window.confirm(message));}});};const showPopup=params=>{return new Promise(resolve=>{if(webApp){webApp.showPopup(params,resolve);}else{alert(params.message);resolve(null);}});};const close=()=>{if(webApp){webApp.close();}};const sendData=data=>{if(webApp){webApp.sendData(JSON.stringify(data));}};const openLink=function(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(webApp){webApp.openLink(url,options);}else{window.open(url,'_blank');}};const hapticFeedback=function(){let type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'impact';let style=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'medium';if(webApp!==null&&webApp!==void 0&&webApp.HapticFeedback){if(type==='impact'){webApp.HapticFeedback.impactOccurred(style);}else if(type==='notification'){webApp.HapticFeedback.notificationOccurred(style);}else if(type==='selection'){webApp.HapticFeedback.selectionChanged();}}};const value={webApp,user,isReady,showAlert,showConfirm,showPopup,close,sendData,openLink,hapticFeedback};return/*#__PURE__*/_jsx(TelegramContext.Provider,{value:value,children:children});};export default TelegramContext;","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsx","_jsx","TelegramContext","useTelegram","context","Error","TelegramProvider","_ref","children","webApp","setWebApp","user","setUser","isReady","setIsReady","_window$Telegram","window","Telegram","WebApp","_tg$initDataUnsafe","tg","expand","enableClosingConfirmation","setHeaderColor","setBackgroundColor","userData","initDataUnsafe","console","warn","id","first_name","last_name","username","log","platform","version","showAlert","message","alert","showConfirm","Promise","resolve","confirm","showPopup","params","close","sendData","data","JSON","stringify","openLink","url","options","arguments","length","undefined","open","hapticFeedback","type","style","HapticFeedback","impactOccurred","notificationOccurred","selectionChanged","value","Provider"],"sources":["/var/www/rudn-schedule.ru/frontend/src/contexts/TelegramContext.js"],"sourcesContent":["/**\n * Контекст для Telegram WebApp\n * Предоставляет доступ к данным пользователя Telegram и функциям WebApp API\n */\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst TelegramContext = createContext(null);\n\nexport const useTelegram = () => {\n  const context = useContext(TelegramContext);\n  if (!context) {\n    throw new Error('useTelegram must be used within TelegramProvider');\n  }\n  return context;\n};\n\nexport const TelegramProvider = ({ children }) => {\n  const [webApp, setWebApp] = useState(null);\n  const [user, setUser] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    // Инициализация Telegram WebApp\n    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {\n      const tg = window.Telegram.WebApp;\n      \n      // Расширяем WebApp на весь экран\n      tg.expand();\n      \n      // Включаем закрытие по свайпу вниз (если поддерживается)\n      if (tg.enableClosingConfirmation) {\n        tg.enableClosingConfirmation();\n      }\n      \n      // Устанавливаем тему (если поддерживается)\n      if (tg.setHeaderColor) {\n        tg.setHeaderColor('#1a1a1a');\n      }\n      if (tg.setBackgroundColor) {\n        tg.setBackgroundColor('#1a1a1a');\n      }\n      \n      // Получаем данные пользователя\n      const userData = tg.initDataUnsafe?.user;\n      \n      setWebApp(tg);\n      \n      // Если пользователь есть - используем его, иначе mock данные\n      if (userData) {\n        setUser(userData);\n      } else {\n        // Mock данные для разработки вне Telegram\n        console.warn('Telegram user not found. Using mock data for development.');\n        setUser({\n          id: 123456789,\n          first_name: 'Test',\n          last_name: 'User',\n          username: 'testuser',\n        });\n      }\n      \n      setIsReady(true);\n\n      console.log('Telegram WebApp initialized:', {\n        platform: tg.platform,\n        version: tg.version,\n        user: userData || 'mock',\n      });\n    } else {\n      // Для разработки вне Telegram - используем mock данные\n      console.warn('Telegram WebApp не доступен. Используются mock данные для разработки.');\n      setUser({\n        id: 123456789,\n        first_name: 'Test',\n        last_name: 'User',\n        username: 'testuser',\n      });\n      setIsReady(true);\n    }\n  }, []);\n\n  const showAlert = (message) => {\n    if (webApp) {\n      webApp.showAlert(message);\n    } else {\n      alert(message);\n    }\n  };\n\n  const showConfirm = (message) => {\n    return new Promise((resolve) => {\n      if (webApp) {\n        webApp.showConfirm(message, resolve);\n      } else {\n        resolve(window.confirm(message));\n      }\n    });\n  };\n\n  const showPopup = (params) => {\n    return new Promise((resolve) => {\n      if (webApp) {\n        webApp.showPopup(params, resolve);\n      } else {\n        alert(params.message);\n        resolve(null);\n      }\n    });\n  };\n\n  const close = () => {\n    if (webApp) {\n      webApp.close();\n    }\n  };\n\n  const sendData = (data) => {\n    if (webApp) {\n      webApp.sendData(JSON.stringify(data));\n    }\n  };\n\n  const openLink = (url, options = {}) => {\n    if (webApp) {\n      webApp.openLink(url, options);\n    } else {\n      window.open(url, '_blank');\n    }\n  };\n\n  const hapticFeedback = (type = 'impact', style = 'medium') => {\n    if (webApp?.HapticFeedback) {\n      if (type === 'impact') {\n        webApp.HapticFeedback.impactOccurred(style);\n      } else if (type === 'notification') {\n        webApp.HapticFeedback.notificationOccurred(style);\n      } else if (type === 'selection') {\n        webApp.HapticFeedback.selectionChanged();\n      }\n    }\n  };\n\n  const value = {\n    webApp,\n    user,\n    isReady,\n    showAlert,\n    showConfirm,\n    showPopup,\n    close,\n    sendData,\n    openLink,\n    hapticFeedback,\n  };\n\n  return (\n    <TelegramContext.Provider value={value}>\n      {children}\n    </TelegramContext.Provider>\n  );\n};\n\nexport default TelegramContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}