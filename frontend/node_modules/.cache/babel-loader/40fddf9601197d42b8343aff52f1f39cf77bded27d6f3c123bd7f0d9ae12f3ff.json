{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const WeekDaySelector=_ref=>{let{selectedDate,onDateSelect,weekNumber=1}=_ref;const[weekDays,setWeekDays]=useState([]);const[selectedIndex,setSelectedIndex]=useState(0);useEffect(()=>{generateWeekDays(weekNumber);},[weekNumber]);// Синхронизация selectedIndex с selectedDate из родителя\nuseEffect(()=>{if(selectedDate&&weekDays.length>0){// Находим индекс дня, который соответствует выбранной дате\nconst index=weekDays.findIndex(day=>{return day.fullDate.toDateString()===selectedDate.toDateString();});if(index!==-1){setSelectedIndex(index);}else{// Если выбранная дата не в диапазоне недели, снимаем выделение\nsetSelectedIndex(-1);}}},[selectedDate,weekDays]);const generateWeekDays=week=>{const today=new Date();const days=[];// Получаем понедельник текущей недели\nconst currentDayOfWeek=today.getDay();// 0 = Воскресенье, 1 = Понедельник, ...\nconst daysFromMonday=currentDayOfWeek===0?6:currentDayOfWeek-1;// Смещение от понедельника\nconst monday=new Date(today);monday.setDate(today.getDate()-daysFromMonday);// Если выбрана следующая неделя, добавляем 7 дней\nif(week===2){monday.setDate(monday.getDate()+7);}// Генерируем 7 дней недели (Пн-Вс)\nfor(let i=0;i<7;i++){const date=new Date(monday);date.setDate(monday.getDate()+i);days.push({date:date.getDate(),dayName:getDayName(date.getDay()),fullDate:date,isToday:date.toDateString()===today.toDateString()});}setWeekDays(days);// Автоматически выбираем сегодняшний день, если он есть в списке\nif(week===1){const todayIndex=days.findIndex(day=>day.isToday);if(todayIndex!==-1){setSelectedIndex(todayIndex);if(onDateSelect){onDateSelect(days[todayIndex].fullDate);}}}else{// Для следующей недели выбираем понедельник\nsetSelectedIndex(0);if(onDateSelect){onDateSelect(days[0].fullDate);}}};const getDayName=dayIndex=>{const days=['Вс','Пн','Вт','Ср','Чт','Пт','Сб'];return days[dayIndex];};const handleDayClick=(index,day)=>{setSelectedIndex(index);if(onDateSelect){onDateSelect(day.fullDate);}};return/*#__PURE__*/_jsx(\"div\",{className:\"px-6 overflow-x-auto scrollbar-hide\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-3 justify-start min-w-max pl-1 items-center\",style:{height:'127px'},children:weekDays.map((day,index)=>{const isSelected=index===selectedIndex;return/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleDayClick(index,day),className:\"\\n                flex-shrink-0 rounded-[40px] flex flex-col items-center justify-center\\n                transition-all duration-300\\n                \".concat(isSelected?'bg-gradient-live':'bg-[#2C2C2C] hover:bg-[#353535]',\"\\n              \"),style:{width:'61px',height:isSelected?'127px':'99px'},children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-zaglav font-normal leading-none\",style:{fontSize:'52px',color:isSelected?'#F9F9F9':'#BEBEBE',fontWeight:400,marginBottom:'1px'},children:String(day.date).padStart(2,'0')}),/*#__PURE__*/_jsx(\"span\",{className:\"font-zaglav font-normal leading-none\",style:{fontSize:'36px',color:'#999999',fontWeight:400},children:day.dayName})]},index);})})});};","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","WeekDaySelector","_ref","selectedDate","onDateSelect","weekNumber","weekDays","setWeekDays","selectedIndex","setSelectedIndex","generateWeekDays","length","index","findIndex","day","fullDate","toDateString","week","today","Date","days","currentDayOfWeek","getDay","daysFromMonday","monday","setDate","getDate","i","date","push","dayName","getDayName","isToday","todayIndex","dayIndex","handleDayClick","className","children","style","height","map","isSelected","onClick","concat","width","fontSize","color","fontWeight","marginBottom","String","padStart"],"sources":["/var/www/rudn-schedule.ru/frontend/src/components/WeekDaySelector.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const WeekDaySelector = ({ selectedDate, onDateSelect, weekNumber = 1 }) => {\n  const [weekDays, setWeekDays] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  useEffect(() => {\n    generateWeekDays(weekNumber);\n  }, [weekNumber]);\n\n  // Синхронизация selectedIndex с selectedDate из родителя\n  useEffect(() => {\n    if (selectedDate && weekDays.length > 0) {\n      // Находим индекс дня, который соответствует выбранной дате\n      const index = weekDays.findIndex(day => {\n        return day.fullDate.toDateString() === selectedDate.toDateString();\n      });\n      \n      if (index !== -1) {\n        setSelectedIndex(index);\n      } else {\n        // Если выбранная дата не в диапазоне недели, снимаем выделение\n        setSelectedIndex(-1);\n      }\n    }\n  }, [selectedDate, weekDays]);\n\n  const generateWeekDays = (week) => {\n    const today = new Date();\n    const days = [];\n    \n    // Получаем понедельник текущей недели\n    const currentDayOfWeek = today.getDay(); // 0 = Воскресенье, 1 = Понедельник, ...\n    const daysFromMonday = currentDayOfWeek === 0 ? 6 : currentDayOfWeek - 1; // Смещение от понедельника\n    \n    const monday = new Date(today);\n    monday.setDate(today.getDate() - daysFromMonday);\n    \n    // Если выбрана следующая неделя, добавляем 7 дней\n    if (week === 2) {\n      monday.setDate(monday.getDate() + 7);\n    }\n    \n    // Генерируем 7 дней недели (Пн-Вс)\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(monday);\n      date.setDate(monday.getDate() + i);\n      days.push({\n        date: date.getDate(),\n        dayName: getDayName(date.getDay()),\n        fullDate: date,\n        isToday: date.toDateString() === today.toDateString()\n      });\n    }\n    \n    setWeekDays(days);\n    \n    // Автоматически выбираем сегодняшний день, если он есть в списке\n    if (week === 1) {\n      const todayIndex = days.findIndex(day => day.isToday);\n      if (todayIndex !== -1) {\n        setSelectedIndex(todayIndex);\n        if (onDateSelect) {\n          onDateSelect(days[todayIndex].fullDate);\n        }\n      }\n    } else {\n      // Для следующей недели выбираем понедельник\n      setSelectedIndex(0);\n      if (onDateSelect) {\n        onDateSelect(days[0].fullDate);\n      }\n    }\n  };\n\n  const getDayName = (dayIndex) => {\n    const days = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\n    return days[dayIndex];\n  };\n\n  const handleDayClick = (index, day) => {\n    setSelectedIndex(index);\n    if (onDateSelect) {\n      onDateSelect(day.fullDate);\n    }\n  };\n\n  return (\n    <div className=\"px-6 overflow-x-auto scrollbar-hide\">\n      <div className=\"flex gap-3 justify-start min-w-max pl-1 items-center\" style={{ height: '127px' }}>\n        {weekDays.map((day, index) => {\n          const isSelected = index === selectedIndex;\n          \n          return (\n            <button\n              key={index}\n              onClick={() => handleDayClick(index, day)}\n              className={`\n                flex-shrink-0 rounded-[40px] flex flex-col items-center justify-center\n                transition-all duration-300\n                ${\n                  isSelected\n                    ? 'bg-gradient-live'\n                    : 'bg-[#2C2C2C] hover:bg-[#353535]'\n                }\n              `}\n              style={{ \n                width: '61px', \n                height: isSelected ? '127px' : '99px'\n              }}\n            >\n              {/* Date */}\n              <span\n                className=\"font-zaglav font-normal leading-none\"\n                style={{\n                  fontSize: '52px',\n                  color: isSelected ? '#F9F9F9' : '#BEBEBE',\n                  fontWeight: 400,\n                  marginBottom: '1px'\n                }}\n              >\n                {String(day.date).padStart(2, '0')}\n              </span>\n              \n              {/* Day of week */}\n              <span\n                className=\"font-zaglav font-normal leading-none\"\n                style={{\n                  fontSize: '36px',\n                  color: '#999999',\n                  fontWeight: 400\n                }}\n              >\n                {day.dayName}\n              </span>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}